# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
        OSBOX_BOARD: nanopineo2black
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2


      - name: Get Armbian build enviroment
        run: |
          git clone --depth 1 https://github.com/armbian/build
          ls -latr
      # Runs a set of commands using the runners shell 
      - name: Build Armbian 
        run: |
          ls -latr build
          mkdir -p ./build/userpatches
          ls -latr build/userpatches
          cp ./customize-image.sh ./build/userpatches/customize-image.sh
          #cp ./config-default.conf ./build/userpatches/config-default.conf
          cd build
          #./compile.sh
          ##./compile.sh BOARD=${{ env.OSBOX_BOARD }} HOST=osbox BRANCH=current RELEASE=focal BUILD_MINIMAL=yes BUILD_DESKTOP=no KERNEL_ONLY=no KERNEL_CONFIGURE=prebuilt COMPRESS_OUTPUTIMAGE=sha,gpg,img
          touch ./output/images/dummyfile.txt
      - name: Creating Archive 
        run: |
          ls -latr ./output/images
          tar -zcvf osbox-${{ env.OSBOX_BOARD }}.tar.gz ./output/images
          ls -latr .
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Osbox ${{ env.OSBOX_BOARD }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./osbox-${{ env.OSBOX_BOARD }}.tar.gz
          asset_name: osbox-${{ env.OSBOX_BOARD }}.tar.gz
          asset_content_type: application/gzip
